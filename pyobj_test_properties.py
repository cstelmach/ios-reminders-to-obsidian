from Foundation import NSDate
from EventKit import EKEventStore, EKReminder, EKEntityTypeReminder

# pretty print
from pprint import pprint


def get_reminders_from_list(list_name):
    store = EKEventStore.alloc().init()
    store.requestAccessToEntityType_completion_(EKEntityTypeReminder, None)

    calendars = store.calendarsForEntityType_(EKEntityTypeReminder)
    target_calendar = next(
        (calendar for calendar in calendars if calendar.title() == list_name), None
    )

    if not target_calendar:
        print(f"List '{list_name}' not found.")
        return []

    predicate = store.predicateForRemindersInCalendars_([target_calendar])
    reminders = store.remindersMatchingPredicate_(predicate)

    return reminders


def check_properties(reminders):
    properties = [
        # ".cxx_destruct",
        # ".cxx_destruct",
        # "CADObjectID",
        # "CAMLType",
        # "CAMLTypeForKey_",
        # "CAMLTypeSupportedForKey_",
        # "CA_addValue_multipliedBy_",
        # "CA_archivingValueForKey_",
        # "CA_copyNumericValue_",
        # "CA_copyRenderValue",
        # "CA_copyRenderValueWithColorspace_",
        # "CA_distanceToValue_",
        # "CA_interpolateValue_byFraction_",
        # "CA_interpolateValues___interpolator_",
        # "CA_numericValueCount",
        # "CA_prepareRenderValue",
        # "CA_roundToIntegerFromValue_",
        # "CA_validateValue_forKey_",
        # "CKAssignToContainerWithID_",
        # "CKDescription",
        # "CKDescriptionClassName",
        # "CKDescriptionPropertiesWithPublic_private_shouldExpand_",
        # "CKDescriptionRedact_avoidShortDescription_",
        # "CKDescriptionShouldPrintPointer",
        # "CKExpandedDescription",
        # "CKObjectDescriptionRedact_",
        # "CKObjectDescriptionRedact_avoidShortDescription_",
        # "CKPropertiesDescription",
        # "CKRedactedDescription",
        # "CKUnredactedDescription",
        # "CalClassName",
        # "NSRepresentation",
        # "NSRepresentation",
        # "RBSIsXPCObject",
        # "URL",
        # "URLString",
        # "UUID",
        # "VNComputeDevicePerformanceScore",
        # "VNComputeDeviceType",
        # "_CKDescriptionWithExpansion_",
        # "_ICSStringWithOptions_",
        # "_ICSStringWithOptions_appendingToString_",
        # "__NS_swiftOverlay_automaticallyNotifiesObserversForKey_foundationImplementation_",
        # "__NS_swiftOverlay_keyPathsForValuesAffectingValueForKey_foundationImplementation_",
        # "___tryRetain_OA",
        # "__autorelease_OA",
        # "__dealloc_zombie",
        # "__doc__",
        # "__im_afterDelay_",
        # "__im_afterDelay_modes_",
        # "__im_getInvocation_",
        # "__im_onDetachedThread",
        # "__im_onMainThread",
        # # "__im_onMainThreadIfNecessary",
        # "__im_onThread_",
        # "__im_onThread_immediateForMatchingThread_",
        # "__module__",
        # "__new__",
        # # "__pyobjc_PythonObject__",
        # "__pyobjc_PythonTransient___",
        # "__release_OA",
        # "__retain_OA",
        # "__slots__",
        # "_abCompareContainsSubString_options_",
        # "_abCompareNotWithinIntervalAroundTodayYearless_",
        # "_abCompareNotWithinIntervalAroundToday_",
        # "_abCompareNotWithinIntervalFromTodayYearless_",
        # "_abCompareNotWithinIntervalFromToday_",
        # "_abComparePrefixMatch_options_",
        # "_abCompareSuffixMatch_options_",
        # "_abCompareWithinIntervalAroundTodayYearless_",
        # "_abCompareWithinIntervalAroundToday_",
        # "_abCompareWithinIntervalFromTodayYearless_",
        # "_abCompareWithinIntervalFromToday_",
        # "_abCompare_ascending_options_",
        # "_addCachedMeltedObject_forMultiValueKey_",
        # "_addChangesFromObject_passingTest_ignoreRelations_copyingBackingObjects_",
        # "_addChanges_copyingBackingObjects_",
        # "_addExceptionDate_",
        # "_addObserver_forProperty_options_context_",
        # "_addOrganizerAndSelfAttendeeForNewInvitationInCalendar_",
        # "_addSummaryWithDepth_toMutableString_indentFirstLine_",
        # "_adjustAfterMovingOrCopyingFromOldCalendar_toNewCalendar_cachedConstraintsForOldCalendar_savingItem_",
        # "_adjustAfterMovingOrCopyingFromOldCalendar_toNewCalendar_cachedConstraintsForOldCalendar_savingItem_",
        # "_adjustPersistedStartDateComponentsForNewTimeZone_",
        # "_allowsDirectEncoding",
        # "_applyDefinedAfterFirstSaveFrom_",
        # "_applyKnownImmutableValuesFrom_",
        # "_areOnlyChangedKeys_",
        # "_asScriptTerminologyNameArray",
        # "_asScriptTerminologyNameString",
        # "_associatedUniversalLink",
        # "_basicSummaryWithDepth_",
        # "_cachedMeltedChildIdentifierToParentMap_",
        # "_cachedMeltedObjects",
        # "_cachedMeltedObjectsCount",
        # "_cachedValues",
        # "_cfTypeID",
        # "_changeValueForKey_key_key_usingBlock_",
        # "_changeValueForKey_usingBlock_",
        # "_changeValueForKeys_count_maybeOldValuesDict_maybeNewValuesDict_usingBlock_",
        # "_compatibility_takeValue_forKey_",
        # "_conformsToProtocolNamed_",
        # "_convertBackingObjectsWithPath_updateBackingObjects_allChangedBackingObjects_eventStore_updatedBackingObjectProvider_",
        # "_copyDescription",
        # "_copyWithoutChangesInZone_",
        # "_crComputeDeviceType",
        # "_createKeyValueBindingForKey_name_bindingType_",
        # "_customObjectForKey_local_",
        # "_dataFromStructuredDataDictionary_local_",
        # "_deletePersistentItemAndDetachedItems_forSavingItem_",
        # "_deleteSelfAndDetached",
        # "_destroyObserverList",
        # "_didChangeValuesForKeys_",
        # "_didEndKeyValueObserving",
        # "_excludeAlarmDueToConnectionTrigger_",
        # "_generateNewUniqueID",
        # "_generateNewUniqueID",
        # "_hadAttendees",
        # "_hadRecurrenceRules",
        # "_hasChangeHelperInKeys_ignoreKeys_checkUnsaved_",
        # "_hasChanges",
        # "_hasChangesForKey_",
        # "_hasChangesForKey_checkUnsaved_",
        # "_hasUnsavedChangesInKeys_ignoreKeys_",
        # "_implicitObservationInfo",
        # "_initChangeSetIfNone",
        # "_intents_compareValue_relation_",
        # "_intents_displayImageForLanguage_",
        # "_intents_displayImageWithLocalizer_",
        # "_intents_enumerateObjectsOfClass_withBlock_",
        # "_intents_indexingRepresentation",
        # "_intents_isValidKey_",
        # "_intents_localizedCopyForLanguage_",
        # "_intents_localizedCopyWithLocalizer_",
        # "_intents_readableDescriptionForLanguage_",
        # "_intents_readableDescriptionForLanguage_withMetadata_",
        # "_intents_readableDescriptionWithLocalizer_",
        # "_intents_readableDescriptionWithLocalizer_metadata_",
        # "_intents_readableSubtitleForLanguage_",
        # "_intents_readableSubtitleForLanguage_withMetadata_",
        # "_intents_readableSubtitleWithLocalizer_",
        # "_intents_readableSubtitleWithLocalizer_metadata_",
        # "_intents_readableTitleForLanguage_",
        # "_intents_readableTitleForLanguage_withMetadata_",
        # "_intents_readableTitleWithLocalizer_",
        # "_intents_readableTitleWithLocalizer_metadata_",
        # "_intents_setterForPropertyWithName_",
        # "_isDeallocating",
        # "_isInSharedToMeCalendarWithNoSharingScheduling",
        # "_isKVOA",
        # "_isNew",
        # "_isOnlyChangedKey_",
        # "_isPropertyUnavailable_convertToFullObjectIfUnavailable_",
        # "_isToManyChangeInformation",
        # "_localClassNameForClass",
        # "_lock",
        # "_markAsCommittedCommon",
        # "_markAsDeletedCommon",
        # "_markAsNewCommon",
        # "_markAsNotNewCommon",
        # "_markAsSavedCommon",
        # "_markAsUndeletedCommon",
        # "_moveToCalendar_forSavingItem_",
        # "_multiRelationshipKeysToCheckForChanges",
        # "_notifyObserversForKeyPath_change_",
        # "_notifyObserversOfChangeFromValuesForKeys_toValuesForKeys_",
        # "_observerStorage",
        # "_observerStorageOfSize_",
        # "_oldValueForKeyPath_",
        # "_oldValueForKey_",
        # "_overrideUseFastBlockObservers",
        # "_pendingChangeNotificationsArrayForKey_create_",
        # "_performBlockOnOwnedCachedRelatedObjects_",
        # "_performWithLock_",
        # "_previousValueForKey_",
        # "_propertyValueForKey_",
        # "_pyobjc_performOnThreadWithResult_",
        # "_pyobjc_performOnThread_",
        # "_receiveBox_",
        # "_recursiveSnapshotCopyWithPropertyAccessor_propertyKeysToCopy_propertyKeysToSkip_recurseOnWeakRelations_",
        # "_recursivelyPerformBlockOnSelfAndDetachedItems_forSavingItem_",
        # "_refreshCommon",
        # "_refreshable",
        # "_removeAttendee_",
        # "_removeCachedMeltedObject_forMultiValueKey_",
        # "_removeDetachedItem_",
        # "_removeExceptionDate_",
        # "_removeObserver_forProperty_",
        # "_reset",
        # "_reset",
        # "_resetAfterUpdatingChangeSetOrBackingObject",
        # "_resetAfterUpdatingChangeSetOrBackingObjectWithForce_",
        # "_resetCommon",
        # "_resetFieldsAfterMovingToNewCalendar",
        # "_resetIfBackingObjectIsOfClass_fetchResetFrozenObjectBlock_",
        # "_resetInternalStateWithForce_",
        # "_resetMeltedCache",
        # "_resetWithFrozenObject_",
        # "_rollbackCommon",
        # "_scriptingAddObjectsFromArray_toValueForKey_",
        # "_scriptingAddObjectsFromSet_toValueForKey_",
        # "_scriptingAddToReceiversArray_",
        # "_scriptingAlternativeValueRankWithDescriptor_",
        # "_scriptingArrayOfObjectsForSpecifier_",
        # "_scriptingCanAddObjectsToValueForKey_",
        # "_scriptingCanHandleCommand_",
        # "_scriptingCanInsertBeforeOrReplaceObjectsAtIndexes_inValueForKey_",
        # "_scriptingCanSetValue_forSpecifier_",
        # "_scriptingCoerceValue_forKey_",
        # "_scriptingCopyWithProperties_forValueForKey_ofContainer_",
        # "_scriptingCount",
        # "_scriptingCountNonrecursively","",
        # "_scriptingCountOfValueForKey_",
        # "_scriptingDebugDescription",
        # "_scriptingDescriptorOfComplexType_orReasonWhyNot_",
        # "_scriptingDescriptorOfEnumeratorType_orReasonWhyNot_",
        # "_scriptingDescriptorOfObjectType_orReasonWhyNot_",
        # "_scriptingDescriptorOfValueType_orReasonWhyNot_",
        # "_scriptingExists",
        # "_scriptingIndexOfObjectForSpecifier_",
        # "_scriptingIndexOfObjectWithName_inValueForKey_",
        # "_scriptingIndexOfObjectWithUniqueID_inValueForKey_",
        # "_scriptingIndexesOfObjectsForSpecifier_",
        # "_scriptingIndicesOfObjectsAfterValidatingSpecifier_",
        # "_scriptingIndicesOfObjectsForSpecifier_count_",
        # "_scriptingInsertObject_inValueForKey_",
        # "_scriptingInsertObjects_atIndexes_inValueForKey_",
        # "_scriptingMightHandleCommand_",
        # "_scriptingObjectAtIndex_inValueForKey_",
        # "_scriptingObjectCountInValueForKey_",
        # "_scriptingObjectForSpecifier_","",
        # "_scriptingObjectWithName_inValueForKey_",
        # "_scriptingObjectWithUniqueID_inValueForKey_",
        # "_scriptingObjectsAtIndexes_inValueForKey_",
        # "_scriptingRemoveAllObjectsFromValueForKey_",
        # "_scriptingRemoveObjectsAtIndexes_fromValueForKey_",
        # "_scriptingRemoveValueForSpecifier_",
        # "_scriptingReplaceObjectAtIndex_withObjects_inValueForKey_",
        # "_scriptingSetOfObjectsForSpecifier_",
        # "_scriptingSetValue_forKey_",
        # "_scriptingSetValue_forSpecifier_",
        # "_scriptingShouldCheckObjectIndexes",
        # "_scriptingValueForKey_",
        # "_scriptingValueForSpecifier_",
        # "_selfAttendee",
        # "_setCalendarRecursively_forSavingItem_",
        # "_setCustomObject_forKey_local_",
        # "_setObject_forBothSidesOfRelationshipWithKey_",
        # "_setSelfAttendee_",
        # "_setterForProperty_",
        # "_sharedInit",
        # "_singleRelationshipKeysToCheckForChanges",
        # "_structuredDataDictionaryFromData_local_",
        # "_summaryWithDepth_",
        # "_supportsGetValueWithNameForKey_perhapsByOverridingClass_",
        # "_supportsGetValueWithUniqueIDForKey_perhapsByOverridingClass_",
        # "_tryRetain",
        # "_updateCachedMeltedObjectSetForMultiValueKey_usingBlock_",
        # "_updateModifiedAlarmByAcknowledging",
        # "_updatePersistentObjectOfSelfAndDetachedItemsExceptForSavingItem_",
        # "_updatePersistentValueForKey_",
        # "_validateDeletableBySharedCalendarShareeWithError_",
        # "_validateDeletableDueToAccessConsent_",
        # "_validateDeletableInCalendarWithError_",
        # "_validateDeletable_",
        # "_validationContext","",
        # "_willBeginKeyValueObserving",
        # "_willChangeValuesForKeys_",
        # "_willSave",
        # "abCaseInsensitiveIsEqual_",
        # "abDictionaryWithValuesForKeyPaths_",
        # "abRemoveObserverIgnoringExceptions_forKeyPath_",
        # "action",
        # "actionString",
        # "actionsState",
        # "addAlarm_",
        # "addAttachment_",
        # "addAttendee_",
        # "addCachedMeltedObject_forMultiValueKey_",
        # "addChainedObservers_",
        # "addChangesFromObject_",
        # "addChangesFromObject_copyingBackingObjects_",
        # "addChanges_",
        # "addCoCommitObject_",
        # "addMultiChangedObjectValue_forKey_",
        # "addMultiChangedObjectValues_forKey_",
        # "addObject_toBothSidesOfRelationshipWithKey_",
        # "addObject_toPropertyWithKey_",
        # "addObservationTransformer_",
        # "addObserverBlock_",
        # "addObserver_",
        # "addObserver_forKeyPath_options_context_",
        # "addObserver_forObservableKeyPath_",
        # "addOrganizerAndSelfAttendeeForNewInvitation",
        # "addRecurrenceRule_",
        # "additionalFrozenProperties",
        # "additionalMeltedObjects",
        # "adjustDateFromUTC_",
        # "alarms",
        # "allAlarms",
        # "allAlarmsSet",
        # "allPropertyKeys",
        # "allowsAlarmModifications",
        # "allowsAttendeesModifications",
        # "allowsCalendarModifications",
        # "allowsRecurrenceModifications",
        # "allowsSpansOtherThanThisEvent",
        # "allowsWeakReference",
        # "appLink",
        # "applyChanges_",
        # "attachments",
        # "attachmentsSet",
        # "attendeeForMe",
        # "attendeeMatchingEmailAddress_",
        # "attendees",
        # "attendeesRaw",
        # "attributeKeys",
        # "augmentMeltedObjectCache_",
        # "autoContentAccessingProxy",
        # "autorelease",
        # "awakeAfterUsingCoder_",
        # "backingObject",
        # "backingObjectOfChildObject_withRelationshipKey_",
        # "bestDisplayAlarm",
        # "boolValueSafe",
        # "boolValueSafe_",
        # "bs_isPlistableType",
        # "bs_secureEncoded",
        # "cachedMeltedChildIdentifierToParentMap",
        # "cachedMeltedObjectForSingleValueKey_",
        # "cachedMeltedObjects",
        # "cachedMeltedObjects",
        # "cachedMeltedObjectsForMultiValueKey_",
        # "cachedValueForKey_",
        # "cachedValueForKey_expectingCachedValue_forMasterKey_relatedKeys_populateBlock_",
        # "cachedValueForKey_populateBlock_",
        # "calendar",
        # "calendarItemExternalIdentifier",
        # "calendarItemIdentifier",
        # "calendarScale",
        # "canBeConvertedToFullObject",
        # "canMoveOrCopyToCalendar_fromCalendar_error_",
        # "canMoveToCalendar_error_",
        # "canMoveToCalendar_fromCalendar_error_",
        # "changeSet",
        # "changedKeys",
        # "ck_bindInStatement_atIndex_",
        # "cksqlcs_appendSQLConstantValueToString_",
        # "cksqlcs_archivedObjectBindingValue_",
        # "cksqlcs_bindArchivedObject_index_db_",
        # "cksqlcs_bindBlob_index_db_",
        # "cksqlcs_bindDouble_index_db_",
        # "cksqlcs_bindInt64_index_db_",
        # "cksqlcs_bindText_index_db_",
        # "cksqlcs_blobBindingValue_destructor_error_",
        # "cksqlcs_doubleBindingValue_",
        # "cksqlcs_int64BindingValue_",
        # "cksqlcs_textBindingValue_destructor_error_",
        # "classCode",
        # "classDescription",
        # "classDescriptionForDestinationKey_",
        # "classForArchiver",
        # "classForCoder",
        # "classForKeyedArchiver",
        # "classForPortCoder",
        # "className",
        # "class__",
        # "clearCachedValueForKey_",
        # "clearCachedValuesForKeys_",
        # "clearParentID",
        # "clearProperties",
        # "clientLocation",
        # "coerceValueForScriptingProperties_",
        # "coerceValue_forKey_",
        # "committedConstraints",
        # "committedConstraints",
        # "committedCopy",
        # "committedValueForKey_",
        # "completionDate",
        # "conformsToProtocol_",
        # "constraints",
        # "constraints",
        # "copy",
        # "copyMeltedObjectCache",
        # "copyScriptingValue_forKey_withProperties_",
        # "copyWithZone_",
        # "createKeyValueBindingForKey_typeMask_",
        # "creationDate",
        # "customObjectForKey_",
        # "dealloc",
        # "debugDescription",
        # "defaultAlarm",
        # "defaultAlarmWasDeleted",
        # "defaultAlarms",
        # "deletePersistentObject",
        # "description",
        # "descriptionAtIndent_",
        # "detachedItems",
        # "dictionaryWithValuesForKeys_","",
        # "didChangeValueForKey_",
        # "didChangeValueForKey_withSetMutation_usingObjects_",
        # "didChange_valuesAtIndexes_forKey_",
        # "diffWithObject_",
        # "displayNotes",
        # "displayOrder",
        # "doesContain_",
        # "doesNotRecognizeSelector_",
        # "doesNotRecognizeSelector_",
        # "doubleValueSafe",
        # "doubleValueSafe_",
        # "dueDate",
        # "dueDateAllDay",
        # "dueDateComponents",
        # "dueDateComponents",
        # "dueDateTimeZone",
        # "duplicate",
        # "duplicateToEventStore_",
        # "ekExceptionDates",
        # "emptyMeltedCache",
        # "emptyMeltedCacheForKey_",
        # "emptyMeltedCacheForKeys_",
        # "encodeWithCAMLWriter_",
        # "endTimeZone",
        # "endTimeZoneName",
        # "entityName",
        # "entityType",
        # "entityType",
        # "eventStore",
        # "exceptionDates",
        # "exceptionDatesAdjustedForFloatingEvents",
        # "existingMeltedObject",
        # "existsInStore",
        # "exportToICS",
        # "exportToICSWithOptions_",
        # "externalData",
        # "externalID",
        # "externalModificationTag",
        # "externalScheduleID",
        # "externalURI",
        # "externalURI",
        # "filterAttendeesPendingDeletion_",
        # "finalize",
        # "findOriginalAlarmStartingWith_",
        # "finishObserving",
        # "firstAlertDate","",
        # "flushKeyBindings",
        # "forceUpdateFrozenCalendar_",
        # "forwardInvocation_",
        # "forwardingTargetForSelector_",
        # "fp__ivarDescriptionForClass_",
        # "fp__methodDescriptionForClass_",
        # "fp_ivarDescription",""
        # "fp_methodDescription",
        # "fp_shortMethodDescription",
        # "frozenClass",
        # "frozenObject",
        # "frozenObjectInStore_",
        # "frozenOrMeltedCachedMultiRelationObjectsForKey_",
        # "frozenOrMeltedCachedSingleRelationObjectForKey_",
        # "handleQueryWithUnboundKey_",
        # "handleTakeValue_forUnboundKey_",
        # "hasAlarms",
        # "hasAttachment",
        # "hasAttendees",
        # "hasCalendarChangeThatRequiresDeleteAndAdd",
        # "hasChanges",
        # "hasEverBeenCommitted",
        # "hasNeverBeenCommitted",
        # "hasNotes",
        # "hasRecurrenceRuleAdditionOrRemoval",
        # "hasRecurrenceRules",
        # "hasUnsavedChanges",
        # "isAllDay",
        # "isCompleted",
        # "isDeletable",
        # "isDeleted",
        # "isEditable",
        # "isFault",
        # "isFloating",
        # "isFrozen",
        # "isNew",
        # "isNull",
        # "isPartialObject",
        # "isSaved",
        # "isUndeleted",
        #
        #
        # "clientLocation",
        # # "coerceValueForScriptingProperties_",
        # # "coerceValue_forKey_",
        # # "committedConstraints",
        # # "committedConstraints",
        # # "committedCopy",
        # # "committedValueForKey_",
        # "completionDate",
        # # "conformsToProtocol_",
        # "constraints",
        # # "constraints",
        # # "copy",
        # "copyMeltedObjectCache",
        # # "copyScriptingValue_forKey_withProperties_",
        # # "copyWithZone_",
        # # "createKeyValueBindingForKey_typeMask_",
        # "creationDate",
        # # "customObjectForKey_",
        # # "dealloc",
        # "debugDescription",
        # "defaultAlarm",
        # "defaultAlarmWasDeleted",
        # "defaultAlarms",
        # # "deletePersistentObject",
        # "description",
        # # "description",
        # # "description",
        # # "description",
        # # "description",
        # "descriptionAtIndent_",
        # "detachedItems",
        # "dictionaryWithValuesForKeys_",
        # "didChangeValueForKey_",
        # "didChangeValueForKey_withSetMutation_usingObjects_",
        # "didChange_valuesAtIndexes_forKey_",
        # "diffWithObject_",
        # "displayNotes",
        # "displayOrder",
        # "doesContain_",
        # "doesNotRecognizeSelector_",
        # "doesNotRecognizeSelector_",
        # "doubleValueSafe",
        # "doubleValueSafe_",
        # # "dueDate",
        # "dueDateAllDay",
        # "dueDateComponents",
        # "dueDateComponents",
        # "dueDateTimeZone",
        # "duplicate"
        #
        #
        #
        #
        #
        ###
        # "duplicateToEventStore_",
        # "ekExceptionDates",
        # "emptyMeltedCache",
        # "emptyMeltedCacheForKey_",
        # "emptyMeltedCacheForKeys_",
        # "encodeWithCAMLWriter_",
        # "endTimeZone",
        # "endTimeZoneName",
        # "entityName",
        # "entityType",
        # "entityType",
        # "eventStore",
        # "exceptionDates",
        # "exceptionDatesAdjustedForFloatingEvents",
        # "existingMeltedObject",
        # "existsInStore",
        # "exportToICS",
        # "exportToICSWithOptions_",
        # "externalData",
        # "externalID",
        # "externalModificationTag",
        # "externalScheduleID",
        # "externalURI",
        # "externalURI",
        # "filterAttendeesPendingDeletion_",
        # "finalize",
        # "findOriginalAlarmStartingWith_",
        # "finishObserving",
        # "firstAlertDate",
        # "flushKeyBindings",
        # "forceUpdateFrozenCalendar_",
        # "forwardInvocation_",
        # "forwardingTargetForSelector_","",
        # "fp__ivarDescriptionForClass_","",
        # "fp__methodDescriptionForClass_","",
        # "fp_ivarDescription","",
        # "_parentID", "",
        # "fp_methodDescription", "",
        # "fp_shortMethodDescription",
        # "frozenClass",
        # "frozenObject",
        # "frozenObjectInStore_",
        # "frozenOrMeltedCachedMultiRelationObjectsForKey_",
        # "frozenOrMeltedCachedSingleRelationObjectForKey_",
        # "handleQueryWithUnboundKey_",
        # "handleTakeValue_forUnboundKey_",
        # "hasAlarms",
        # "hasAttachment",
        # "hasAttendees",
        # "hasCalendarChangeThatRequiresDeleteAndAdd",
        # "hasChanges",
        # "hasEverBeenCommitted",
        # "hasNeverBeenCommitted",
        # "hasNotes",
        # "hasRecurrenceRuleAdditionOrRemoval",
        # "hasRecurrenceRules",
        # "hasUnsavedChanges",
        # "hasUnsavedChangesIgnoreKeys_",
        # "hasUnsavedChangesInKeys_",
        # "hash",
        # "hash",
        # "if_setValueIfNonNil_forKey_",
        # "if_setValueIfYES_forKey_",
        # "implementsSelector_",
        # "indexForAlarm_",
        # "init",
        # "init",
        # "init",
        # "initWithPersistentObject_",
        # "initWithPersistentObject_",
        # "initWithPersistentObject_objectForCopy_",
        # "insertPersistentObjectIfNeeded",
        # "insertValue_atIndex_inPropertyWithKey_",
        # "insertValue_inPropertyWithKey_",
        # "int64ValueSafe",
        # "int64ValueSafe_",
        # "inverseForRelationshipKey_",
        # "inverseObjectWithObject_diff_",
        # "isAlarmAcknowledgedPropertyDirty",
        # "isAllDay",
        # "isAllDay",
        # "isCaseInsensitiveLike_",
        # "isCompleted",
        # "isCompletelyEqual_",
        # "isDeletable",
        # "isDeleted",
        # "isDifferentFromCommitted",
        # "isEditable",
        # "isEqualTo_",
        # "isEqual_",
        # "isEqual_",
        # "isEqual_comparingKeys_compareImmutableKeys_ignoringProperties_",
        # "isEqual_ignoringProperties_",
        # "isExternallyOrganizedInvitation",
        # "isFault",
        # "isFloating","",
        # "isFrozen",
        # "isGreaterThanOrEqualTo_",
        # "isGreaterThan_",
        # "isKindOfClass_",
        # "isLessThanOrEqualTo_",
        # "isLessThan_",
        # "isLike_",
        # "isMemberOfClass_",
        # "isNSArray__",
        # "isNSCFConstantString__",
        # "isNSData__",
        # "isNSDate__",
        # "isNSDictionary__",
        # "isNSNumber__",
        # "isNSObject__",
        # "isNSOrderedSet__",
        # "isNSSet__",
        # "isNSString__",
        # "isNSTimeZone__",
        # "isNSValue__",
        # "isNew",
        # "isNewItemThatFailedToPut",
        # "isNotEqualTo_",
        # "isNull",
        # "isNull",
        # "isNull",
        # "isOnlyAlarmAcknowledgedPropertyDirty",
        # "isOrganizedBySharedCalendarOwner",
        # "isPartialObject",
        # "isPropertyUnavailable_",
        # "isProxy",
        # "isSaved",
        # "isSelfOrganized",
        # "isSelfOrganizedInvitation",
        # "isToManyKey_",
        # "isUndeleted",
        # "keyValueBindingForKey_typeMask_",
        # "lastModifiedDate",
        # "localCustomObjectForKey_",
        # "localStructuredData",
        # "localUID",
        # "location","",
        # "markAsCommitted",
        # "markAsDeleted",
        # "markAsNew",
        # "markAsNotNew",
        # "markAsSaved",
        # "markAsUndeleted",
        # "meltedAndCachedMultiRelationCountForKey_",
        # "meltedAndCachedMultiRelationObjectsForKey_",
        # "meltedAndCachedSingleRelationObjectForKey_",
        # "meltedObjectInStore_",
        # "methodDescriptionForSelector_",
        # "methodForSelector_",
        # "methodSignatureForSelector_",
        # "methodSignatureForSelector_",
        # "modifiedProperties",
        # "moveToCalendar_",
        # "multiChangedObjectValuesForKey_",
        # "mutableArrayValueForKeyPath_",
        # "mutableArrayValueForKey_",
        # "mutableCopy",
        # "mutableCopyWithZone_",
        # "mutableOrderedSetValueForKeyPath_",
        # "mutableOrderedSetValueForKey_",
        # "mutableSetValueForKeyPath_",
        # "mutableSetValueForKey_",
        # "needsResponse",
        # "newScriptingObjectOfClass_forValueForKey_withContentsValue_properties_",
        # "newTaggedNSStringWithASCIIBytes__length__",
        # "notes",
        # # "objectID",
        # "objectSpecifier",
        # "observationInfo",
        # "observeValueForKeyPath_ofObject_change_context_",
        # "organizedByMe",
        # "organizer",
        # "originalItem",
        # "ownsDestinationObjectsForRelationshipKey_",
        # "parentID",
        # "participantMatchingContact_",
        # "pep_afterDelay_",
        # "pep_getInvocation_",
        # "pep_onMainThread",
        # "pep_onMainThreadIfNecessary",
        # "pep_onOperationQueue_",
        # "pep_onOperationQueue_priority_",
        # "pep_onThread_",
        # "pep_onThread_immediateForMatchingThread_",
        # "performBlockOnMainThreadSynchronously_",
        # "performSelectorInBackground_withObject_",
        # "performSelectorOnMainThread_withObject_waitUntilDone_",
        # "performSelectorOnMainThread_withObject_waitUntilDone_modes_",
        # "performSelector_",
        # "performSelector_object_afterDelay_",
        # "performSelector_onThread_withObject_waitUntilDone_",
        # "performSelector_onThread_withObject_waitUntilDone_modes_",
        # "performSelector_withObject_",
        # "performSelector_withObject_afterDelay_",
        # "performSelector_withObject_afterDelay_ignoreMenuTracking_",
        # "performSelector_withObject_afterDelay_inModes_",
        # "performSelector_withObject_withObject_",
        # "persistentObject",
        # "preFrozenRelationshipObjects",
        # "preferredLocation",
        # "prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider_",
        # "previouslySavedCopy",
        # "priority",
        # "privacyDescription",
        # "pyobjc_performSelectorInBackground_withObject_",
        # "pyobjc_performSelectorOnMainThread_withObject_",
        # "pyobjc_performSelectorOnMainThread_withObject_modes_",
        # "pyobjc_performSelectorOnMainThread_withObject_waitUntilDone_",
        # "pyobjc_performSelectorOnMainThread_withObject_waitUntilDone_modes_",
        # "pyobjc_performSelector_onThread_withObject_",
        # "pyobjc_performSelector_onThread_withObject_modes_",
        # "pyobjc_performSelector_onThread_withObject_waitUntilDone_",
        # "pyobjc_performSelector_onThread_withObject_waitUntilDone_modes_",
        # "pyobjc_performSelector_withObject_afterDelay_",
        # "pyobjc_performSelector_withObject_afterDelay_inModes_",
        # "rebase",
        # "rebaseSkippingRelationProperties_",
        # "rebaseSkippingRelationProperties_toEventStore_",
        # "rebaseToEventStore_",
        # "rebasedFrom",
        # "receiveObservedError_",
        # "receiveObservedValue_",
        # "recurrenceRuleString",
        # "recurrenceRules",
        # "recurrenceRulesSet",
        # "refetch",
        # "refresh",
        # "refresh",
        # "refreshAndNotify_",
        # "release",
        # "rem_humanReadableIdentifier",
        # "reminderIdentifier",
        # "removeAcknowledgedSnoozedAlarms",
        # "removeAlarm_",
        # "removeAllSnoozedAlarms",
        # "removeAttachment_",
        # "removeAttendee_",
        # "removeCachedMeltedObject_forMultiValueKey_",
        # "removeLastExtraneousOrganizerAndSelfAttendee",
        # "removeMultiChangedObjectValue_forKey_",
        # "removeMultiChangedObjectValues_forKey_",
        # "removeObject_fromBothSidesOfRelationshipWithKey_",
        # "removeObject_fromPropertyWithKey_",
        # "removeObservation_",
        # "removeObservation_forObservableKeyPath_",
        # "removeObserver_forKeyPath_",
        # "removeObserver_forKeyPath_context_",
        # "removeRecurrenceRule_",
        # "removeValueAtIndex_fromPropertyWithKey_",
        # "replaceMultiChangedObjectValuesWithObjectValues_forKey_",
        # "replaceValueAtIndex_inPropertyWithKey_withValue_",
        # "replacementObjectForArchiver_",
        # "replacementObjectForCoder_",
        # "replacementObjectForKeyedArchiver_",
        # "replacementObjectForPortCoder_",
        # "requiresDetach",
        # "reset",
        # "reset",
        # "respondsToSelector_",
        # "retain",
        # "retainCount",
        # "retainWeakReference",
        # "revert",
        # "rollback",
        # "rollback",
        # "rowID",
        # "save_",
        # "scriptingProperties",
        # "scriptingValueForSpecifier_",
        # "self",
        # "selfAttendee",
        # "selfParticipantStatus",
        # "selfParticipantStatusRaw",
        # "semanticIdentifier",
        # "sequenceNumber",
        # "setActionString_",
        # "setAction_",
        # "setAdditionalFrozenProperties_",
        # "setAdditionalMeltedObjects_",
        # "setAlarms_",
        # "setAllAlarmsSet_",
        # "setAllAlarms_",
        # "setAllDay_",
        # "setAllDay_",
        # "setAppLink_",
        # "setAttachmentsSet_",
        # "setAttachments_",
        # "setAttendeesRaw_",
        # "setAttendees_",
        # "setBackingObject_",
        # "setCachedMeltedObject_forSingleValueKey_",
        # "setCachedMeltedObjects_",
        # "setCachedMeltedObjects_",
        # "setCachedMeltedObjects_forMultiValueKey_",
        # "setCachedValue_forKey_",
        # "setCalendarItemIdentifier_",
        # "setCalendarScale_",
        # "setCalendar_",
        # "setChangeSet_",
        # "setClientLocation_",
        # "setCompleted_",
        # "setCompletionDate_",
        # "setCreationDate_",
        # "setCustomObject_forKey_",
        # "setDefaultAlarmWasDeleted_",
        # "setDetachedItems_",
        # "setDisplayNotes_",
        # "setDisplayOrder_",
        # "setDueDateComponents_",
        # "setDueDateComponents_",
        # "setDueDate_",
        # "setEkExceptionDates_",
        # "setEndTimeZoneName_",
        # "setEndTimeZone_",
        # "setEventStore_",
        # "setExceptionDates_",
        # "setExternalData_",
        # "setExternalID_",
        # "setExternalModificationTag_",
        # "setExternalScheduleID_",
        # "setFirstAlertDate_",
        # "setLastModifiedDate_",
        # "setLocalCustomObject_forKey_",
        # "setLocalStructuredData_",
        # "setLocation_",
        # "setModifiedProperties_",
        # "setNilValueForKey_",
        # "setNotes_",
        # "setObservationInfo_",
        # "setObservation_forObservingKeyPath_",
        # "setOrganizer_",
        # "setOriginalItem_",
        # "setParentID_",
        # "setPersistentObject_",
        # "setPriority_",
        # "setRecurrenceRulesSet_",
        # "setRecurrenceRules_",
        # "setScriptingProperties_",
        # "setSelfAttendee_",
        # "setSequenceNumber_",
        # "setSharedItemCreatedByAddressString_",
        # "setSharedItemCreatedByAddress_",
        # "setSharedItemCreatedByDisplayName_",
        # "setSharedItemCreatedByFirstName_",
        # "setSharedItemCreatedByLastName_",
        # "setSharedItemCreatedDate_",
        # "setSharedItemCreatedTimeZoneName_",
        # "setSharedItemCreatedTimeZone_",
        # "setSharedItemModifiedByAddressString_",
        # "setSharedItemModifiedByAddress_",
        # "setSharedItemModifiedByDisplayName_",
        # "setSharedItemModifiedByFirstName_",
        # "setSharedItemModifiedByLastName_",
        # "setSharedItemModifiedDate_",
        # "setSharedItemModifiedTimeZoneName_",
        # "setSharedItemModifiedTimeZone_",
        # "setSingleChangedValue_forKey_",
        # "setSingleRecurrenceRule_",
        # "setStartDateAllDay_",
        # "setStartDateComponents_",
        # "setStartDateComponents_",
        # "setStartDateRaw_",
        # "setStartDateTimeZone_",
        # "setStartTimeZoneName_",
        # "setStartTimeZone_",
        # "setStartTimeZone_",
        # "setStructuredData_",
        # "setStructuredLocationWithoutPrediction_",
        # "setStructuredLocation_",
        # "setSuppressNotificationForChanges_",
        # "setSyncError_",
        # "setTimeZone_",
        # "setTimeZone_",
        # "setTitle_",
        # "setTravelStartLocation_",
        # "setURLString_",
        # "setURL_",
        # "setUniqueID_",
        # "setUniqueId_",
        # "setUnlocalizedTitle_",
        # "setValue_forKeyPath_",
        # "setValue_forKey_",
        # "setValue_forUndefinedKey_",
        # "setValuesForKeysWithDictionary_",
        # "set_cachedMeltedObjects_",
        # "set_cachedValues_",
        # "set_validationContext_",
        # "shallowCopyWithoutChanges",
        # "sharedItemCreatedByAddress",
        # "sharedItemCreatedByAddressString",
        # "sharedItemCreatedByDisplayName",
        # "sharedItemCreatedByFirstName",
        # "sharedItemCreatedByLastName",
        # "sharedItemCreatedDate",
        # "sharedItemCreatedTimeZone",
        # "sharedItemCreatedTimeZoneName",
        # "sharedItemModifiedByAddress",
        # "sharedItemModifiedByAddressString",
        # "sharedItemModifiedByDisplayName",
        # "sharedItemModifiedByFirstName",
        # "sharedItemModifiedByLastName",
        # "sharedItemModifiedDate",
        # "sharedItemModifiedTimeZone",
        # "sharedItemModifiedTimeZoneName",
        # "sharedUID",
        # "shouldHaveDefaultAlarms",
        # "shouldLoadRelationshipForValidation_",
        # "shouldLoadRelationshipForValidation_",
        # "singleChangedValueForKey_",
        # "singleRecurrenceRule",
        # "snapshotCopy",
        # "snapshotCopyWithPropertyKeysToCopy_",
        # "snapshotCopyWithPropertyKeysToCopy_propertyKeysToSkip_",
        # "snoozeAlarm_withLocation_proximity_",
        # "snoozeAlarm_withTimeIntervalFromNow_",
        # "snoozeAlarm_withTimeIntervalFromNow_pinsTriggerToStartDate_",
        # "snoozeAlarm_withTimeIntervalFromNow_pinsTriggerToStartDate_",
        # "sortedAlarms",
        # "specificIdentifier",
        # "startDateAllDay",
        # "startDateComponents",
        # "startDateComponents",
        # "startDateComponentsRaw",
        # "startDateForRecurrence",
        # "startDateForRecurrence",
        # "startDateRaw",
        # "startDateTimeZone",
        # "startTimeZone",
        # "startTimeZone",
        # "startTimeZoneName",
        # "storedValueForKey_",
        # "stringValueSafe",
        # "stringValueSafe_",
        # "structuredData",
        # "structuredLocation",
        # "structuredLocationWithoutPrediction",
        # "superclass",
        # "supportsBSXPCSecureCoding",
        # "supportsRBSXPCSecureCoding",
        # "suppressNotificationForChanges",
        # "syncError",
        # "takeStoredValue_forKey_",
        # "takeStoredValuesFromDictionary_",
        # "takeValue_forKeyPath_",
        # "takeValue_forKey_",
        # "takeValuesFromDictionary_",
        # "timeZone",
        # "timeZone",
        # "title",
        # "title",
        # "title",
        # "toManyRelationshipKeys",
        # "toOneRelationshipKeys",
        # "toPBCodable",
        # "travelStartLocation",
        # "un_safeBoolValue",
        # "unableToSetNilForKey_",
        # "uniqueID",
        # "uniqueId",
        # "uniqueIdentifier",
        # "unlocalizedTitle",
        # "updateAfterApplyingChanges_",
        # "updateMeltedAndCachedMultiRelationObjects_forKey_",
        # "updateMeltedAndCachedSingleRelationObject_forKey_frozenClass_",
        # "updateMeltedCacheForChangeSet_",
        # "updateMultiValueCacheForChangeSet_preservingExistingAdds_",
        # "updatePersistentObject",
        # "updatePersistentObjectSkippingProperties_",
        # "updatePersistentValueForKeyIfNeeded_",
        # "updateWithAppLink_usedSelectedText_",
        # "updateWithVCSEntity_inCalendar_",
        # "utf8ValueSafe",
        # "utf8ValueSafe_",
        # "validateTakeValue_forKeyPath_",
        # "validateValue_forKeyPath_error_",
        # "validateValue_forKey_",
        # "validateValue_forKey_error_",
        # "validateWithOwner_error_",
        # "validate_",
        # "validate_",
        # "validate_",
        # "valueAtIndex_inPropertyWithKey_",
        # "valueForKeyPath_",
        # "valueForKey_",
        # "valueForUndefinedKey_",
        # "valueWithName_inPropertyWithKey_",
        # "valueWithUniqueID_inPropertyWithKey_",
        # "valuesForKeys_",
        # "willChangeValueForKey_",
        # "willChangeValueForKey_withSetMutation_usingObjects_",
        # "willChange_valuesAtIndexes_forKey_",
        # "willSave",
        # "zone",
    ]
    properties = ["UUID"]

    for prop in properties:
        results = {}
        print(f"\n---\n\nProperty: {prop}\n")

        if prop == "":
            break

        for reminder in reminders:
            if hasattr(reminder, prop):
                try:
                    value = getattr(reminder, prop)()
                except Exception as e:
                    # print propetry not working
                    print(f"Error.")
                    break

                if callable(value):
                    value = value()
                if value not in results:
                    results[value] = []
                results[value].append(reminder.title())

        # pretty print
        pprint(results)
        # print(results)


if __name__ == "__main__":
    list_name = "temp.crap"
    reminders = get_reminders_from_list(list_name)

    if reminders:
        print(f"Checking properties for reminders in the list '{list_name}':")
        check_properties(reminders)
    else:
        print(f"No reminders found in the list '{list_name}'.")


# useful
# isCompleted
# hasNotes
# "displayNotes"
# rowID
# semanticIdentifier
# sharedUID
# speicificIdentifier
# uniqueID
